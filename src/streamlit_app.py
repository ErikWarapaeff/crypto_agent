import streamlit as st
import asyncio
from datetime import datetime
import re

from config.settings import setup_environment, APP_NAME, APP_COLOR, OPENAI_API_KEY
from core.agent import create_agent

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_environment()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title=APP_NAME,
    page_icon="üöÄ",
    layout="wide",
)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'agent' not in st.session_state:
    st.session_state.agent = create_agent()

if 'messages' not in st.session_state:
    st.session_state.messages = []

if 'thinking' not in st.session_state:
    st.session_state.thinking = False
    
if 'chats' not in st.session_state:
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {chat_id: {title: "–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞", messages: [—Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π]}}
    st.session_state.chats = {
        "default": {"title": "–ù–æ–≤—ã–π —á–∞—Ç", "messages": st.session_state.messages.copy() if 'messages' in st.session_state else []}
    }

if 'current_chat_id' not in st.session_state:
    st.session_state.current_chat_id = "default"

if 'chat_counter' not in st.session_state:
    st.session_state.chat_counter = 1
    
if 'chat_to_rename' not in st.session_state:
    st.session_state.chat_to_rename = None

# CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
st.markdown("""
<style>
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è */
    .sidebar .stForm {
        background-color: #f1f3f4;
        padding: 0.5rem;
        border-radius: 0.3rem;
        margin-bottom: 0.5rem;
    }
    
    .sidebar .stForm .stButton {
        margin-top: 0;
    }
    
    .sidebar .stTextInput > div > div > input {
        font-size: 0.9rem;
        padding: 0.3rem;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    .sidebar .sidebar-content {
        background-color: #f8f9fa;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .sidebar .stButton > button {
        background-color: transparent;
        border: none;
        text-align: left;
        padding: 0.5rem 0;
        color: #333;
        width: 100%;
    }
    
    .sidebar .stButton > button:hover {
        background-color: #e9ecef;
        border-radius: 0.3rem;
    }
    
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
    .main .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }

    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
    .stButton > button {
        width: 100%;
        height: 2.75rem;
        padding: 0 0.5rem;
        white-space: nowrap;
    }

    /* –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
    .button-cols {
        min-width: 12rem;
    }

    /* –°—Ç–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π */
    .chat-message {
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
        display: flex;
        flex-direction: column;
    }

    .chat-message.user {
        background-color: #E3F2FD;
        border-left: 4px solid #1E88E5;
        margin-left: 60px;
    }

    .chat-message.assistant {
        background-color: #F5F5F5;
        border-left: 4px solid #7E57C2;
        margin-right: 60px;
    }

    .chat-message.system {
        background-color: #FFF8E1;
        border-left: 4px solid #FFC107;
    }

    .message-content {
        display: flex;
        margin-bottom: 0.5rem;
    }

    .message-content img {
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        object-fit: cover;
        margin-right: 1rem;
    }

    .message-content p {
        margin: 0;
    }

    /* –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∫ –Ω–∏–∑—É */
    .input-container {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 1rem;
        background-color: white;
        z-index: 100;
        border-top: 1px solid #ddd;
    }

    /* –î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å—Ç—É–ø –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª–∏—Å—å —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ */
    .chat-window {
        margin-bottom: 5rem;
    }

    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏–Ω–Ω–µ—Ä–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–≤–æ–¥–∞ */
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            margin-left: 10px;
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: #2196F3;
            animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
        to { transform: rotate(360deg); }
    }

    .input-with-spinner {
        display: flex;
        align-items: center;
    }

    .status-message {
        margin-left: 10px;
        color: #2196F3;
        font-size: 0.9em;
    }

    /* –°–∫—Ä—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã streamlit */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
</style>
""", unsafe_allow_html=True)

def create_new_chat():
    chat_id = f"chat_{st.session_state.chat_counter}"
    st.session_state.chat_counter += 1
    st.session_state.chats[chat_id] = {
        "title": f"–ù–æ–≤—ã–π —á–∞—Ç {st.session_state.chat_counter}", 
        "messages": []
    }
    st.session_state.current_chat_id = chat_id
    st.session_state.messages = st.session_state.chats[chat_id]["messages"]
    st.rerun()

def switch_chat(chat_id):
    st.session_state.current_chat_id = chat_id
    st.session_state.messages = st.session_state.chats[chat_id]["messages"]
    st.rerun()

def delete_chat(chat_id):
    if len(st.session_state.chats) > 1:
        del st.session_state.chats[chat_id]
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —á–∞—Ç
        st.session_state.current_chat_id = next(iter(st.session_state.chats.keys()))
        st.session_state.messages = st.session_state.chats[st.session_state.current_chat_id]["messages"]
    st.rerun()

def rename_chat(chat_id, new_title):
    if new_title and new_title.strip():
        st.session_state.chats[chat_id]["title"] = new_title.strip()
    st.session_state.chat_to_rename = None
    st.rerun()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def process_message(message):
    try:
        return await st.session_state.agent.process_user_input(message)
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}"

def process_pending_request():
    if st.session_state.thinking and hasattr(st.session_state, 'current_question'):
        with st.spinner("–ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å..."):
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)

            try:
                response = loop.run_until_complete(process_message(st.session_state.current_question))
                st.session_state.messages.append({"role": "assistant", "content": response})
            except Exception as e:
                st.session_state.messages.append({
                    "role": "system",
                    "content": f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
                })
            finally:
                loop.close()
                st.session_state.thinking = False
                if hasattr(st.session_state, 'current_question'):
                    delattr(st.session_state, 'current_question')
                # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–∏–º —á–∞—Ç–æ–º
                st.session_state.chats[st.session_state.current_chat_id]["messages"] = st.session_state.messages

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def handle_submit():
    user_message = st.session_state.user_input
    
    if user_message.strip():
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.messages.append({"role": "user", "content": user_message})
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Ç–µ–∫—É—â–∏–º —á–∞—Ç–æ–º
        st.session_state.chats[st.session_state.current_chat_id]["messages"] = st.session_state.messages
        
        # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ thinking
        st.session_state.user_input = ""
        st.session_state.thinking = True
        st.session_state.current_question = user_message

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title(APP_NAME)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏—Å—Ç–æ—Ä–∏–µ–π —á–∞—Ç–æ–≤
with st.sidebar:
    st.title("–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
    if st.button("‚ûï –ù–æ–≤—ã–π —á–∞—Ç", key="new_chat"):
        create_new_chat()
    
    st.markdown("---")
    
    # –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —á–∞—Ç–æ–≤
    for chat_id, chat_data in st.session_state.chats.items():
        # –ï—Å–ª–∏ —ç—Ç–æ—Ç —á–∞—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if st.session_state.chat_to_rename == chat_id:
            with st.form(key=f"rename_form_{chat_id}", clear_on_submit=True):
                col1, col2 = st.columns([4, 1])
                with col1:
                    new_title = st.text_input("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", value=chat_data["title"], 
                                              key=f"new_title_{chat_id}", label_visibility="collapsed")
                with col2:
                    submit_button = st.form_submit_button("‚úì")
                    
                if submit_button:
                    rename_chat(chat_id, new_title)
        else:
            col1, col2, col3 = st.columns([3, 1, 1])
            
            with col1:
                # –í–∏–∑—É–∞–ª—å–Ω–æ –≤—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç
                if chat_id == st.session_state.current_chat_id:
                    st.markdown(f"**üü¢ {chat_data['title']}**")
                else:
                    if st.button(f"üìù {chat_data['title']}", key=f"select_{chat_id}"):
                        switch_chat(chat_id)
            
            with col2:
                # –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
                if st.button("‚úèÔ∏è", key=f"edit_{chat_id}"):
                    st.session_state.chat_to_rename = chat_id
                    st.rerun()
            
            with col3:
                # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ (–µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ)
                if len(st.session_state.chats) > 1:
                    if st.button("üóëÔ∏è", key=f"delete_{chat_id}"):
                        delete_chat(chat_id)

process_pending_request()

# –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
if not st.session_state.messages:
    st.session_state.messages.append({
        "role": "assistant",
        "content": "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö, —Ç–æ–∫–µ–Ω–∞—Ö, DeFi –∏–ª–∏ —Ä—ã–Ω–∫–µ –≤ —Ü–µ–ª–æ–º!"
    })

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –∫–æ–º–∞–Ω–¥–∞—Ö
    st.session_state.messages.append({
        "role": "system",
        "content": "üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∞**: –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ `/research BTC` –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞."
    })

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
chat_container = st.container()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
with chat_container:
    for message in st.session_state.messages:
        role = message["role"]
        content = message["content"]

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ä–æ–ª–∏
        icon = "üë§" if role == "user" else "ü§ñ" if role == "assistant" else "‚ÑπÔ∏è"

        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        with st.container():
            col1, col2 = st.columns([1, 20])
            with col1:
                st.markdown(f"<div style='font-size:1.5rem;'>{icon}</div>", unsafe_allow_html=True)
            with col2:
                st.markdown(f"<div class='chat-message {role}'>{content}</div>", unsafe_allow_html=True)

# –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
st.markdown("<hr>", unsafe_allow_html=True)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
if st.session_state.thinking:
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å —Å–ø–∏–Ω–Ω–µ—Ä–æ–º
    input_col, spinner_col, send_col, clear_col = st.columns([4, 1, 0.8, 0.8])

    with input_col:
        st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å",
            key="user_input",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É...",
            label_visibility="collapsed",
            disabled=True  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        )

    with spinner_col:
        st.markdown('<div class="loading-spinner"></div><span class="status-message">–ò–ò –¥—É–º–∞–µ—Ç...</span>', unsafe_allow_html=True)

    with send_col:
        st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", disabled=True)

    with clear_col:
        st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", disabled=True)

else:
    # –û–±—ã—á–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏
    input_col, send_col, clear_col = st.columns([4, 0.9, 1.2])

    with input_col:
        user_input = st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å",
            key="user_input",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É...",
            label_visibility="collapsed"
        )

    with send_col:
        st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", on_click=handle_submit)

    with clear_col:
        if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
            st.session_state.messages = []
            st.rerun()

# –ü–æ–ª–µ–∑–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤–Ω–∏–∑—É
with st.expander("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"):
    st.markdown("""
    ### –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    - `/research SYMBOL` - –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    - `/price SYMBOL` - –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å —Ü–µ–Ω—ã —Ç–æ–∫–µ–Ω–∞

    ### –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
    - "–ö–∞–∫–æ–≤—ã —Ç–µ–∫—É—â–∏–µ —Ç—Ä–µ–Ω–¥—ã –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–º —Ä—ã–Ω–∫–µ?"
    - "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–æ–∫–µ–Ω ETH"
    - "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å DeFi –ø—Ä–æ–µ–∫—Ç–∞–º–∏?"
    """)

# –í—Å–µ–≥–¥–∞ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
st.markdown("""
<script>
    function scroll_to_bottom() {
        window.scrollTo(0, document.body.scrollHeight);
    }
    scroll_to_bottom();
</script>
""", unsafe_allow_html=True)
